version: '3'

services:

  db:
    image: mysql
    ports:
    - "3306:3306"
    expose:
      - '3306'
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=links
    volumes:
      - ./schemas/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./mysql-dump:/docker-entrypoint-initdb.d
      - my-datavolume:/var/lib/mysql
    networks:
        backend-subnet:
          ipv4_address: 10.128.0.8

  webserver:
    image: nginx
    container_name: webserver
    restart: unless-stopped
    tty: true
    volumes:
      - ./default.conf:/etc/nginx/nginx.conf
    ports:
      - "80:27015"
      - "443:443"
    environment:
      - NGINX_HOST=yeet.me.com
      - NGINX_PORT=80
    depends_on:
      - link_shorterner
    networks:
      proxy:
        ipv4_address: 172.16.238.20
      backend-subnet:
        ipv4_address: 10.128.0.24

  link_shorterner:
    depends_on:
      - db
    build:
        context: ./backend_server
        dockerfile: Dockerfile
    image: link_shorterner:latest
    env_file:
        - ./backend_server/.env
    command:     /bin/sh -c "python3 server.py"
    restart: always
    networks:
      backend-subnet:
            ipv4_address: 10.128.0.10

    ports:
        - 27015:27015


volumes:
  my-datavolume:

networks:
  backend-subnet:
    driver: bridge
    ipam:
        driver: default
        config:
          - subnet: 10.128.0.0/24
  proxy:
    driver: bridge
    driver_opts:
        com.docker.network.enable_ipv6: "true"
    ipam:
        driver: default
        config:
          - subnet: 172.16.238.0/24

volumes:
  my-datavolume:

